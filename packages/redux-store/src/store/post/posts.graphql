# import PostOrder from '/packages/app-lixi-api/schema.graphql'
# import PageInfoFields from '../../graphql/fragments/page-info-fields.fragment.graphql'
# import PostMeiliPageInfoFields from '../../graphql/fragments/page-info-fields.fragment.graphql'

query Post($id: String!) {
  post(id: $id) {
    ...PostFields
  }
}

query Posts(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: [PostOrder!]
  $skip: Int
  $accountId: Int
  $minBurnFilter: Int
  $isTop: String
) {
  allPosts(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    skip: $skip
    accountId: $accountId
    minBurnFilter: $minBurnFilter
    isTop: $isTop
  ) {
    totalCount
    edges {
      cursor
      node {
        ...PostFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query OrphanPosts(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: PostOrder
  $query: String
  $skip: Int
  $minBurnFilter: Int
) {
  allOrphanPosts(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    query: $query
    skip: $skip
    minBurnFilter: $minBurnFilter
  ) {
    totalCount
    edges {
      cursor
      node {
        ...PostFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query PostsByPageId(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: [PostOrder!]
  $id: String
  $skip: Int
  $minBurnFilter: Int
) {
  allPostsByPageId(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    id: $id
    skip: $skip
    minBurnFilter: $minBurnFilter
  ) {
    totalCount
    edges {
      cursor
      node {
        ...PostFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query PostsByUserId(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: PostOrder
  $id: String
  $skip: Int
  $minBurnFilter: Int
) {
  allPostsByUserId(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    id: $id
    skip: $skip
    minBurnFilter: $minBurnFilter
  ) {
    totalCount
    edges {
      cursor
      node {
        ...PostFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query PostsByHashtagId(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: PostOrder
  $id: String
  $skip: Int
  $minBurnFilter: Int
) {
  allPostsByHashtagId(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    id: $id
    skip: $skip
    minBurnFilter: $minBurnFilter
  ) {
    totalCount
    edges {
      cursor
      node {
        ...PostFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query PostsByTokenId(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: PostOrder
  $id: String
  $skip: Int
  $minBurnFilter: Int
) {
  allPostsByTokenId(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    id: $id
    skip: $skip
    minBurnFilter: $minBurnFilter
  ) {
    totalCount
    edges {
      cursor
      node {
        ...PostFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query PostsBySearch(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $query: String
  $minBurnFilter: Int
) {
  allPostsBySearch(
    after: $after
    before: $before
    first: $first
    last: $last
    query: $query
    minBurnFilter: $minBurnFilter
  ) {
    edges {
      cursor
      node {
        ...PostMeiliFields
      }
    }
    pageInfo {
      ...PostMeiliPageInfoFields
    }
  }
}

query PostsBySearchWithHashtag(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $query: String
  $orderBy: PostOrder
  $minBurnFilter: Int
  $hashtags: [String!]
) {
  allPostsBySearchWithHashtag(
    after: $after
    before: $before
    first: $first
    last: $last
    query: $query
    orderBy: $orderBy
    minBurnFilter: $minBurnFilter
    hashtags: $hashtags
  ) {
    edges {
      cursor
      node {
        ...PostMeiliFields
      }
    }
    pageInfo {
      ...PostMeiliPageInfoFields
    }
  }
}

query PostsBySearchWithHashtagAtPage(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $query: String
  $orderBy: PostOrder
  $minBurnFilter: Int
  $hashtags: [String!]
  $pageId: String
) {
  allPostsBySearchWithHashtagAtPage(
    after: $after
    before: $before
    first: $first
    last: $last
    query: $query
    orderBy: $orderBy
    minBurnFilter: $minBurnFilter
    hashtags: $hashtags
    pageId: $pageId
  ) {
    edges {
      cursor
      node {
        ...PostMeiliFields
      }
    }
    pageInfo {
      ...PostMeiliPageInfoFields
    }
  }
}

query PostsBySearchWithHashtagAtToken(
  $after: String
  $before: String
  $first: Int
  $last: Int
  $query: String
  $orderBy: PostOrder
  $minBurnFilter: Int
  $hashtags: [String!]
  $tokenId: String
) {
  allPostsBySearchWithHashtagAtToken(
    after: $after
    before: $before
    first: $first
    last: $last
    query: $query
    orderBy: $orderBy
    minBurnFilter: $minBurnFilter
    hashtags: $hashtags
    tokenId: $tokenId
  ) {
    edges {
      cursor
      node {
        ...PostMeiliFields
      }
    }
    pageInfo {
      ...PostMeiliPageInfoFields
    }
  }
}

fragment PostFields on Post {
  id
  content
  uploads {
    id
    upload {
      id
      sha
      bucket
      width
      height
      sha800
      sha320
      sha40
      cfImageId
      cfImageFilename
    }
  }
  postAccount {
    address
    id
    name
    avatar
  }
  page {
    avatar
    name
    id
    createPostFee
    createCommentFee
    pageAccount {
      id
      name
      address
    }
  }
  token {
    id
    name
    tokenId
  }
  repostCount
  reposts {
    accountId
    account {
      id
      name
      address
    }
  }
  danaBurnUp
  danaBurnDown
  danaBurnScore
  totalComments
  createdAt
  updatedAt
  followPostOwner
  followedPage
  originalLanguage
  translations {
    id
    translateContent
    translateLanguage
  }
}

fragment PostMeiliFields on Post {
  id
  content
  uploads {
    id
    upload {
      id
      sha
      bucket
      width
      height
      sha800
      sha320
      sha40
      cfImageId
      cfImageFilename
    }
  }
  postAccount {
    address
    id
    name
    avatar
  }
  page {
    avatar
    name
    id
    createPostFee
    createCommentFee
    pageAccount {
      id
      name
      address
    }
  }
  token {
    id
    name
    tokenId
  }
  reposts {
    accountId
    account {
      id
      name
      address
    }
  }
  danaBurnUp
  danaBurnDown
  danaBurnScore
  totalComments
  createdAt
  updatedAt
  originalLanguage
  translations {
    id
    translateContent
    translateLanguage
  }
}

mutation createPost($input: CreatePostInput!) {
  createPost(data: $input) {
    ...PostFields
  }
}

mutation updatePost($input: UpdatePostInput!) {
  updatePost(data: $input) {
    ...PostFields
  }
}

mutation repost($input: RepostInput!) {
  repost(data: $input)
}
