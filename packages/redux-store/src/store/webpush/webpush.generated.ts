/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * yarn graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../generated/types.generated';

import { api } from 'src/api/baseApi';
export type WebpushSubscriberQueryVariables = Types.Exact<{
  id: Types.Scalars['String'];
}>;

export type WebpushSubscriberQuery = {
  __typename?: 'Query';
  subscriber: {
    __typename?: 'WebpushSubscriber';
    id: string;
    clientAppId: string;
    deviceId: string;
    accountId: number;
    address: number;
    createdAt: any;
    updatedAt: any;
  };
};

export type WebpushSubscriberFieldsFragment = {
  __typename?: 'WebpushSubscriber';
  id: string;
  clientAppId: string;
  deviceId: string;
  accountId: number;
  address: number;
  createdAt: any;
  updatedAt: any;
};

export type CreateWebpushSubscriberMutationVariables = Types.Exact<{
  input: Types.CreateWebpushSubscriberInput;
}>;

export type CreateWebpushSubscriberMutation = {
  __typename?: 'Mutation';
  createWebpushSubscriber: {
    __typename?: 'WebpushSubscriber';
    id: string;
    clientAppId: string;
    deviceId: string;
    accountId: number;
    address: number;
    createdAt: any;
    updatedAt: any;
  };
};

export type UpdateWebpushSubscriberMutationVariables = Types.Exact<{
  input: Types.UpdateWebpushSubscriberInput;
}>;

export type UpdateWebpushSubscriberMutation = {
  __typename?: 'Mutation';
  updateWebpushSubscriber: {
    __typename?: 'WebpushSubscriber';
    id: string;
    clientAppId: string;
    deviceId: string;
    accountId: number;
    address: number;
    createdAt: any;
    updatedAt: any;
  };
};

export const WebpushSubscriberFieldsFragmentDoc = `
    fragment WebpushSubscriberFields on WebpushSubscriber {
  id
  clientAppId
  deviceId
  accountId
  address
  createdAt
  updatedAt
}
    `;
export const WebpushSubscriberDocument = `
    query WebpushSubscriber($id: String!) {
  subscriber(id: $id) {
    ...WebpushSubscriberFields
  }
}
    ${WebpushSubscriberFieldsFragmentDoc}`;
export const CreateWebpushSubscriberDocument = `
    mutation CreateWebpushSubscriber($input: CreateWebpushSubscriberInput!) {
  createWebpushSubscriber(data: $input) {
    ...WebpushSubscriberFields
  }
}
    ${WebpushSubscriberFieldsFragmentDoc}`;
export const UpdateWebpushSubscriberDocument = `
    mutation UpdateWebpushSubscriber($input: UpdateWebpushSubscriberInput!) {
  updateWebpushSubscriber(data: $input) {
    ...WebpushSubscriberFields
  }
}
    ${WebpushSubscriberFieldsFragmentDoc}`;

const injectedRtkApi = api.injectEndpoints({
  endpoints: build => ({
    WebpushSubscriber: build.query<WebpushSubscriberQuery, WebpushSubscriberQueryVariables>({
      query: variables => ({ document: WebpushSubscriberDocument, variables })
    }),
    CreateWebpushSubscriber: build.mutation<CreateWebpushSubscriberMutation, CreateWebpushSubscriberMutationVariables>({
      query: variables => ({ document: CreateWebpushSubscriberDocument, variables })
    }),
    UpdateWebpushSubscriber: build.mutation<UpdateWebpushSubscriberMutation, UpdateWebpushSubscriberMutationVariables>({
      query: variables => ({ document: UpdateWebpushSubscriberDocument, variables })
    })
  })
});

export { injectedRtkApi as api };
export const {
  useWebpushSubscriberQuery,
  useLazyWebpushSubscriberQuery,
  useCreateWebpushSubscriberMutation,
  useUpdateWebpushSubscriberMutation
} = injectedRtkApi;
