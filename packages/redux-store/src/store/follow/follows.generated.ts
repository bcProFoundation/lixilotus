  /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * yarn graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../generated/types.generated';

import { api } from 'src/api/baseApi';
export type CheckFollowAccountQueryVariables = Types.Exact<{
  followerAccountId: Types.Scalars['Int'];
}>;

export type CheckFollowAccountQuery = {
  __typename?: 'Query';
  checkFollowAccount: {
    __typename?: 'FollowAccount';
    id: string;
    followerAccountId?: number | null;
    followingAccountId?: number | null;
    createdAt: any;
    updatedAt: any;
    followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
    followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  };
};

export type FollowAccountFieldsFragment = {
  __typename?: 'FollowAccount';
  id: string;
  followerAccountId?: number | null;
  followingAccountId?: number | null;
  createdAt: any;
  updatedAt: any;
  followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
};

export type CreateFollowAccountMutationVariables = Types.Exact<{
  input: Types.CreateFollowAccountInput;
}>;

export type CreateFollowAccountMutation = {
  __typename?: 'Mutation';
  createFollowAccount: {
    __typename?: 'FollowAccount';
    id: string;
    followerAccountId?: number | null;
    followingAccountId?: number | null;
    createdAt: any;
    updatedAt: any;
    followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
    followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  };
};

export type FollowPageFieldsFragment = {
  __typename?: 'FollowPage';
  id: string;
  accountId?: number | null;
  pageId?: string | null;
  createdAt: any;
  updatedAt: any;
  account?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  page?: { __typename?: 'Page'; id: string; name: string } | null;
};

export type CreateFollowPageMutationVariables = Types.Exact<{
  input: Types.CreateFollowPageInput;
}>;

export type CreateFollowPageMutation = {
  __typename?: 'Mutation';
  createFollowPage: {
    __typename?: 'FollowPage';
    id: string;
    accountId?: number | null;
    pageId?: string | null;
    createdAt: any;
    updatedAt: any;
    account?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
    page?: { __typename?: 'Page'; id: string; name: string } | null;
  };
};

export const FollowAccountFieldsFragmentDoc = `
    fragment FollowAccountFields on FollowAccount {
  id
  followerAccountId
  followerAccount {
    id
    name
    address
  }
  followingAccountId
  followingAccount {
    id
    name
    address
  }
  createdAt
  updatedAt
}
    `;
export const FollowPageFieldsFragmentDoc = `
    fragment FollowPageFields on FollowPage {
  id
  accountId
  account {
    id
    name
    address
  }
  pageId
  page {
    id
    name
  }
  createdAt
  updatedAt
}
    `;
export const CheckFollowAccountDocument = `
    query checkFollowAccount($followerAccountId: Int!) {
  checkFollowAccount(followerAccountId: $followerAccountId) {
    ...FollowAccountFields
  }
}
    ${FollowAccountFieldsFragmentDoc}`;
export const CreateFollowAccountDocument = `
    mutation createFollowAccount($input: CreateFollowAccountInput!) {
  createFollowAccount(data: $input) {
    ...FollowAccountFields
  }
}
    ${FollowAccountFieldsFragmentDoc}`;
export const CreateFollowPageDocument = `
    mutation createFollowPage($input: CreateFollowPageInput!) {
  createFollowPage(data: $input) {
    ...FollowPageFields
  }
}
    ${FollowPageFieldsFragmentDoc}`;

const injectedRtkApi = api.injectEndpoints({
  endpoints: build => ({
    checkFollowAccount: build.query<CheckFollowAccountQuery, CheckFollowAccountQueryVariables>({
      query: variables => ({ document: CheckFollowAccountDocument, variables })
    }),
    createFollowAccount: build.mutation<CreateFollowAccountMutation, CreateFollowAccountMutationVariables>({
      query: variables => ({ document: CreateFollowAccountDocument, variables })
    }),
    createFollowPage: build.mutation<CreateFollowPageMutation, CreateFollowPageMutationVariables>({
      query: variables => ({ document: CreateFollowPageDocument, variables })
    })
  })
});

export { injectedRtkApi as api };
export const {
  useCheckFollowAccountQuery,
  useLazyCheckFollowAccountQuery,
  useCreateFollowAccountMutation,
  useCreateFollowPageMutation
} = injectedRtkApi;
