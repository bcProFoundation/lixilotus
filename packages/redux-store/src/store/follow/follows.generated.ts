  /**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * yarn graphql-codegen
 *
 * for this file to be re-created
 */

import * as Types from '../../generated/types.generated';

import {
  PageInfoFieldsFragmentDoc,
  PostMeiliPageInfoFieldsFragmentDoc
} from '../../graphql/fragments/page-info-fields.fragment.generated';
import { api } from 'src/api/baseApi';
export type FollowersQueryVariables = Types.Exact<{
  after?: Types.InputMaybe<Types.Scalars['String']>;
  before?: Types.InputMaybe<Types.Scalars['String']>;
  first?: Types.InputMaybe<Types.Scalars['Int']>;
  last?: Types.InputMaybe<Types.Scalars['Int']>;
  orderBy?: Types.InputMaybe<Types.FollowAccountOrder>;
  skip?: Types.InputMaybe<Types.Scalars['Int']>;
}>;

export type FollowersQuery = {
  __typename?: 'Query';
  allFollowers: {
    __typename?: 'FollowAccountConnection';
    totalCount?: number | null;
    edges?: Array<{
      __typename?: 'FollowAccountEdge';
      cursor: string;
      node: {
        __typename?: 'FollowAccount';
        id?: string | null;
        followerAccountId?: number | null;
        followingAccountId?: number | null;
        createdAt: any;
        updatedAt: any;
        followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
        followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
      };
    }> | null;
    pageInfo: {
      __typename?: 'PageInfo';
      endCursor?: string | null;
      hasNextPage: boolean;
      hasPreviousPage: boolean;
      startCursor?: string | null;
    };
  };
};

export type FollowingsQueryVariables = Types.Exact<{
  after?: Types.InputMaybe<Types.Scalars['String']>;
  before?: Types.InputMaybe<Types.Scalars['String']>;
  first?: Types.InputMaybe<Types.Scalars['Int']>;
  last?: Types.InputMaybe<Types.Scalars['Int']>;
  orderBy?: Types.InputMaybe<Types.FollowAccountOrder>;
  skip?: Types.InputMaybe<Types.Scalars['Int']>;
}>;

export type FollowingsQuery = {
  __typename?: 'Query';
  allFollowings: {
    __typename?: 'FollowAccountConnection';
    totalCount?: number | null;
    edges?: Array<{
      __typename?: 'FollowAccountEdge';
      cursor: string;
      node: {
        __typename?: 'FollowAccount';
        id?: string | null;
        followerAccountId?: number | null;
        followingAccountId?: number | null;
        createdAt: any;
        updatedAt: any;
        followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
        followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
      };
    }> | null;
    pageInfo: {
      __typename?: 'PageInfo';
      endCursor?: string | null;
      hasNextPage: boolean;
      hasPreviousPage: boolean;
      startCursor?: string | null;
    };
  };
};

export type FollowAccountFieldsFragment = {
  __typename?: 'FollowAccount';
  id?: string | null;
  followerAccountId?: number | null;
  followingAccountId?: number | null;
  createdAt: any;
  updatedAt: any;
  followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
};

export type CreateFollowAccountMutationVariables = Types.Exact<{
  input: Types.CreateFollowAccountInput;
}>;

export type CreateFollowAccountMutation = {
  __typename?: 'Mutation';
  createFollowAccount: {
    __typename?: 'FollowAccount';
    id?: string | null;
    followerAccountId?: number | null;
    followingAccountId?: number | null;
    createdAt: any;
    updatedAt: any;
    followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
    followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  };
};

export type DeleteFollowAccountMutationVariables = Types.Exact<{
  input: Types.DeleteFollowAccountInput;
}>;

export type DeleteFollowAccountMutation = {
  __typename?: 'Mutation';
  deleteFollowAccount: {
    __typename?: 'FollowAccount';
    id?: string | null;
    followerAccountId?: number | null;
    followingAccountId?: number | null;
    createdAt: any;
    updatedAt: any;
    followerAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
    followingAccount?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  };
};

export type FollowPageFieldsFragment = {
  __typename?: 'FollowPage';
  id?: string | null;
  accountId?: number | null;
  pageId?: string | null;
  createdAt: any;
  updatedAt: any;
  account?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
  page?: { __typename?: 'Page'; id: string; name: string } | null;
};

export type CreateFollowPageMutationVariables = Types.Exact<{
  input: Types.CreateFollowPageInput;
}>;

export type CreateFollowPageMutation = {
  __typename?: 'Mutation';
  createFollowPage: {
    __typename?: 'FollowPage';
    id?: string | null;
    accountId?: number | null;
    pageId?: string | null;
    createdAt: any;
    updatedAt: any;
    account?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
    page?: { __typename?: 'Page'; id: string; name: string } | null;
  };
};

export type DeleteFollowPageMutationVariables = Types.Exact<{
  input: Types.DeleteFollowPageInput;
}>;

export type DeleteFollowPageMutation = {
  __typename?: 'Mutation';
  deleteFollowPage: {
    __typename?: 'FollowPage';
    id?: string | null;
    accountId?: number | null;
    pageId?: string | null;
    createdAt: any;
    updatedAt: any;
    account?: { __typename?: 'Account'; id: string; name: string; address: string } | null;
    page?: { __typename?: 'Page'; id: string; name: string } | null;
  };
};

export const FollowAccountFieldsFragmentDoc = `
    fragment FollowAccountFields on FollowAccount {
  id
  followerAccountId
  followerAccount {
    id
    name
    address
  }
  followingAccountId
  followingAccount {
    id
    name
    address
  }
  createdAt
  updatedAt
}
    `;
export const FollowPageFieldsFragmentDoc = `
    fragment FollowPageFields on FollowPage {
  id
  accountId
  account {
    id
    name
    address
  }
  pageId
  page {
    id
    name
  }
  createdAt
  updatedAt
}
    `;
export const FollowersDocument = `
    query Followers($after: String, $before: String, $first: Int = 20, $last: Int, $orderBy: FollowAccountOrder, $skip: Int) {
  allFollowers(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    skip: $skip
  ) {
    totalCount
    edges {
      cursor
      node {
        ...FollowAccountFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}
    ${FollowAccountFieldsFragmentDoc}
${PageInfoFieldsFragmentDoc}`;
export const FollowingsDocument = `
    query Followings($after: String, $before: String, $first: Int = 20, $last: Int, $orderBy: FollowAccountOrder, $skip: Int) {
  allFollowings(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    skip: $skip
  ) {
    totalCount
    edges {
      cursor
      node {
        ...FollowAccountFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}
    ${FollowAccountFieldsFragmentDoc}
${PageInfoFieldsFragmentDoc}`;
export const CreateFollowAccountDocument = `
    mutation createFollowAccount($input: CreateFollowAccountInput!) {
  createFollowAccount(data: $input) {
    ...FollowAccountFields
  }
}
    ${FollowAccountFieldsFragmentDoc}`;
export const DeleteFollowAccountDocument = `
    mutation deleteFollowAccount($input: DeleteFollowAccountInput!) {
  deleteFollowAccount(data: $input) {
    ...FollowAccountFields
  }
}
    ${FollowAccountFieldsFragmentDoc}`;
export const CreateFollowPageDocument = `
    mutation createFollowPage($input: CreateFollowPageInput!) {
  createFollowPage(data: $input) {
    ...FollowPageFields
  }
}
    ${FollowPageFieldsFragmentDoc}`;
export const DeleteFollowPageDocument = `
    mutation deleteFollowPage($input: DeleteFollowPageInput!) {
  deleteFollowPage(data: $input) {
    ...FollowPageFields
  }
}
    ${FollowPageFieldsFragmentDoc}`;

const injectedRtkApi = api.injectEndpoints({
  endpoints: build => ({
    Followers: build.query<FollowersQuery, FollowersQueryVariables | void>({
      query: variables => ({ document: FollowersDocument, variables })
    }),
    Followings: build.query<FollowingsQuery, FollowingsQueryVariables | void>({
      query: variables => ({ document: FollowingsDocument, variables })
    }),
    createFollowAccount: build.mutation<CreateFollowAccountMutation, CreateFollowAccountMutationVariables>({
      query: variables => ({ document: CreateFollowAccountDocument, variables })
    }),
    deleteFollowAccount: build.mutation<DeleteFollowAccountMutation, DeleteFollowAccountMutationVariables>({
      query: variables => ({ document: DeleteFollowAccountDocument, variables })
    }),
    createFollowPage: build.mutation<CreateFollowPageMutation, CreateFollowPageMutationVariables>({
      query: variables => ({ document: CreateFollowPageDocument, variables })
    }),
    deleteFollowPage: build.mutation<DeleteFollowPageMutation, DeleteFollowPageMutationVariables>({
      query: variables => ({ document: DeleteFollowPageDocument, variables })
    })
  })
});

export { injectedRtkApi as api };
export const {
  useFollowersQuery,
  useLazyFollowersQuery,
  useFollowingsQuery,
  useLazyFollowingsQuery,
  useCreateFollowAccountMutation,
  useDeleteFollowAccountMutation,
  useCreateFollowPageMutation,
  useDeleteFollowPageMutation
} = injectedRtkApi;
