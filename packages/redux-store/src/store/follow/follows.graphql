query checkIsFollowedAccount($address: String!) {
  checkIsFollowedAccount(address: $address) {
    isFollowed
  }
}

query Followers(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: FollowAccountOrder
  $skip: Int
) {
  allFollowers(after: $after, before: $before, first: $first, last: $last, orderBy: $orderBy, skip: $skip) {
    totalCount
    edges {
      cursor
      node {
        ...FollowAccountFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query Followings(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: FollowAccountOrder
  $skip: Int
) {
  allFollowings(after: $after, before: $before, first: $first, last: $last, orderBy: $orderBy, skip: $skip) {
    totalCount
    edges {
      cursor
      node {
        ...FollowAccountFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

fragment FollowAccountFields on FollowAccount {
  id
  followerAccountId
  followerAccount {
    id
    name
    address
  }
  followingAccountId
  followingAccount {
    id
    name
    address
  }
  isFollowed
  createdAt
  updatedAt
}

mutation createFollowAccount($input: CreateFollowAccountInput!) {
  createFollowAccount(data: $input) {
    ...FollowAccountFields
  }
}

mutation deleteFollowAccount($input: DeleteFollowAccountInput!) {
  deleteFollowAccount(data: $input) {
    ...FollowAccountFields
  }
}



# FollowPage
query checkIsFollowedPage($pageId: String!) {
  checkIsFollowedPage(pageId: $pageId) {
    isFollowed
  }
}

fragment FollowPageFields on FollowPage {
  id
  accountId
  account {
    id
    name
    address
  }
  pageId
  page {
    id
    name
  }
  isFollowed
  createdAt
  updatedAt
}

mutation createFollowPage($input: CreateFollowPageInput!) {
  createFollowPage(data: $input) {
    ...FollowPageFields
  }
}

mutation deleteFollowPage($input: DeleteFollowPageInput!) {
  deleteFollowPage(data: $input) {
    ...FollowPageFields
  }
}