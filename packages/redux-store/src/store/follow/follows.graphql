query checkIfFollowAccount($followingAccountId: Int!) {
  checkIfFollowAccount(followingAccountId: $followingAccountId)
}

query allFollowersByFollowing(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: AccountOrder
  $skip: Int
  $followingAccountId: Int
) {
  allFollowersByFollowing(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    skip: $skip
    followingAccountId: $followingAccountId
  ) {
    totalCount
    edges {
      cursor
      node {
        ...AccountFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

query allFollowingsByFollower(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $orderBy: AccountOrder
  $skip: Int
  $followerAccountId: Int
) {
  allFollowingsByFollower(
    after: $after
    before: $before
    first: $first
    last: $last
    orderBy: $orderBy
    skip: $skip
    followerAccountId: $followerAccountId
  ) {
    totalCount
    edges {
      cursor
      node {
        ...AccountFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

fragment FollowAccountFields on FollowAccount {
  id
  followerAccountId
  followerAccount {
    id
    name
    address
  }
  followingAccountId
  followingAccount {
    id
    name
    address
  }
  isFollowed
  createdAt
  updatedAt
}

mutation createFollowAccount($input: CreateFollowAccountInput!) {
  createFollowAccount(data: $input) {
    ...FollowAccountFields
  }
}

mutation deleteFollowAccount($input: DeleteFollowAccountInput!) {
  deleteFollowAccount(data: $input)
}

query checkIfFollowPage($pageId: String) {
  checkIfFollowPage(pageId: $pageId)
}

query checkIfFollowToken($tokenId: String) {
  checkIfFollowToken(tokenId: $tokenId)
}

query allPagesByFollower(
  $after: String
  $before: String
  $first: Int = 20
  $last: Int
  $skip: Int
  $pagesOnly: Boolean
) {
  allPagesByFollower(
    after: $after
    before: $before
    first: $first
    last: $last
    skip: $skip
    pagesOnly: $pagesOnly
  ) {
    totalCount
    edges {
      cursor
      node {
        ...FollowPageFields
      }
    }
    pageInfo {
      ...PageInfoFields
    }
  }
}

fragment FollowPageFields on FollowPage {
  id
  accountId
  account {
    id
    name
    address
  }
  pageId
  page {
    id
    name
    avatar
    cover
    category {
      id
      name
    }
  }
  tokenId
  token {
    id
    tokenId
    name
  }
  isFollowed
  createdAt
  updatedAt
}

mutation createFollowPage($input: CreateFollowPageInput!) {
  createFollowPage(data: $input) {
    ...FollowPageFields
  }
}

mutation deleteFollowPage($input: DeleteFollowPageInput!) {
  deleteFollowPage(data: $input)
}

mutation createFollowToken($input: CreateFollowTokenInput!) {
  createFollowToken(data: $input) {
    ...FollowPageFields
  }
}

mutation deleteFollowToken($input: DeleteFollowTokenInput!) {
  deleteFollowToken(data: $input)
}
