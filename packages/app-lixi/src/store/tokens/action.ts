// import { CreatePageCommand, EditPageCommand } from '@bcpros/lixi-models/src';
import { createAction } from '@reduxjs/toolkit';
// import { Page } from 'src/generated/types.generated';

export const fetchAllTokens = createAction('tokens/fetchAllToken');
export const fetchAllTokensSuccess = createAction<any>('tokens/fetchAllTokensSuccess');
export const fetchAllTokensFailure = createAction<any>('tokens/fetchAllTokensFailure');
export const postToken = createAction<any>('tokens/postToken');
export const postTokenSuccess = createAction<any>('tokens/postTokenSuccess');
export const postTokenFailure = createAction<string>('tokens/postTokenFailure');
export const getToken = createAction<string>('tokens/getToken');
export const getTokenSuccess = createAction<any>('tokens/getTokenSuccess');
export const getTokenFailure = createAction<string>('tokens/getTokenFailure');
export const setSelectedTokenId = createAction<any>('tokens/setSelectedTokenId');
// export const getSelectedTokenId = createAction<any>('tokens/getSelectedTokenId');
// export const setSelectedPage = createAction<string>('pages/getSelectedId');
// export const setPagesByAccountId = createAction<any>('pages/setPagesByAccountId');
// export const getPagesByAccountId = createAction<any>('pages/getPagesAccountId');
// export const setPage = createAction<Page>('pages/setPage');
// export const editPage = createAction<EditPageCommand>('pages/editPage');
// export const editPageSuccess = createAction<any>('pages/editPageSuccess');
// export const editPageFailure = createAction<string>('pages/editPageFailure');
