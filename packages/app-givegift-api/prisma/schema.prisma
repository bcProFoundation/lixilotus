// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                Int      @id @default(autoincrement())
  name              String
  encryptedMnemonic String   @map("encrypted_mnemonic")
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt         DateTime @default(now()) @map("updated_at") @db.Timestamptz
  vaults            Vault[]
  mnemonicHash      String   @map("mnemonic_hash")
  address           String   @default("") @map("address")

  @@index([mnemonicHash])
  @@map("account")
}

model Vault {
  id                  Int       @id @default(autoincrement())
  name                String
  maxRedeem           Int       @default(0) @map("max_redeem")
  redeemedNum         Int       @default(0) @map("redeemed_num")
  redeemType           Int      @default(0) @map("redeem_type")
  vaultType           Int       @default(0) @map("vault_type")
  minValue            Float     @map("min_value")
  maxValue            Float     @map("max_value")
  fixedValue          Float     @map("fixed_value")
  dividedValue        Int       @default(1) @map("divided_value")
  encryptedXPriv      String    @map("encrypted_xpriv")
  encryptedRedeemCode String    @map("encrypted_redeem_code")
  totalRedeem         BigInt    @default(0) @map("total_redeem")
  createdAt           DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt           DateTime  @default(now()) @map("updated_at") @db.Timestamptz
  expiryAt            DateTime? @map("expiry_at")
  country             String?   @map("country")
  isFamilyFriendly    Boolean   @map("is_family_friendly")
  redeems             Redeem[]
  status              String    @default("active") @map("status")
  account             Account   @relation(fields: [accountId], references: [id])
  accountId           Int       @map("account_id")
  derivationIndex     Int       @default(0) @map("derivation_index")
  expiryTime          DateTime? @map("expiry_time") @db.Timestamptz
  address             String    @map("address")

  @@map("vault")
}

model Redeem {
  id            Int      @id @default(autoincrement())
  ipaddress     String   @map("ip_address")
  transactionId String   @map("transaction_id")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt     DateTime @default(now()) @map("updated_at") @db.Timestamptz
  redeemAddress String   @map("redeem_address")
  amount        BigInt   @map("amount")
  vault         Vault    @relation(fields: [vaultId], references: [id])
  vaultId       Int      @map("vault_id")

  @@map("redeem")
}
